// Code generated by go-swagger; DO NOT EDIT.

// ==================================================================================
// Unless otherwise specified, all software contained herein is licensed
// under the Apache License, Version 2.0 (the "Software License");
// you may not use this software except in compliance with the Software
// License. You may obtain a copy of the Software License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the Software License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the Software License for the specific language governing permissions
// and limitations under the Software License.
//
// ==================================================================================
//
// Unless otherwise specified, all documentation contained herein is licensed
// under the Creative Commons License, Attribution 4.0 Intl. (the
// "Documentation License"); you may not use this documentation except in
// compliance with the Documentation License. You may obtain a copy of the
// Documentation License at
//
// https://creativecommons.org/licenses/by/4.0/
//
// Unless required by applicable law or agreed to in writing, documentation
// distributed under the Documentation License is distributed on an "AS IS"
// BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
// implied. See the Documentation License for the specific language governing
// permissions and limitations under the Documentation License.
// ==================================================================================
//
//

package route

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "routing-manager/pkg/models"
)

// GetRouteByIDOKCode is the HTTP code returned for type GetRouteByIDOK
const GetRouteByIDOKCode int = 200

/*GetRouteByIDOK successful operation

swagger:response getRouteByIdOK
*/
type GetRouteByIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Route `json:"body,omitempty"`
}

// NewGetRouteByIDOK creates GetRouteByIDOK with default headers values
func NewGetRouteByIDOK() *GetRouteByIDOK {

	return &GetRouteByIDOK{}
}

// WithPayload adds the payload to the get route by Id o k response
func (o *GetRouteByIDOK) WithPayload(payload *models.Route) *GetRouteByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get route by Id o k response
func (o *GetRouteByIDOK) SetPayload(payload *models.Route) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRouteByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRouteByIDBadRequestCode is the HTTP code returned for type GetRouteByIDBadRequest
const GetRouteByIDBadRequestCode int = 400

/*GetRouteByIDBadRequest Invalid route ID supplied

swagger:response getRouteByIdBadRequest
*/
type GetRouteByIDBadRequest struct {
}

// NewGetRouteByIDBadRequest creates GetRouteByIDBadRequest with default headers values
func NewGetRouteByIDBadRequest() *GetRouteByIDBadRequest {

	return &GetRouteByIDBadRequest{}
}

// WriteResponse to the client
func (o *GetRouteByIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// GetRouteByIDNotFoundCode is the HTTP code returned for type GetRouteByIDNotFound
const GetRouteByIDNotFoundCode int = 404

/*GetRouteByIDNotFound Route not found

swagger:response getRouteByIdNotFound
*/
type GetRouteByIDNotFound struct {
}

// NewGetRouteByIDNotFound creates GetRouteByIDNotFound with default headers values
func NewGetRouteByIDNotFound() *GetRouteByIDNotFound {

	return &GetRouteByIDNotFound{}
}

// WriteResponse to the client
func (o *GetRouteByIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
