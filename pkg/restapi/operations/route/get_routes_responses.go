// Code generated by go-swagger; DO NOT EDIT.

// ==================================================================================
// Unless otherwise specified, all software contained herein is licensed
// under the Apache License, Version 2.0 (the "Software License");
// you may not use this software except in compliance with the Software
// License. You may obtain a copy of the Software License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the Software License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the Software License for the specific language governing permissions
// and limitations under the Software License.
//
// ==================================================================================
//
// Unless otherwise specified, all documentation contained herein is licensed
// under the Creative Commons License, Attribution 4.0 Intl. (the
// "Documentation License"); you may not use this documentation except in
// compliance with the Documentation License. You may obtain a copy of the
// Documentation License at
//
// https://creativecommons.org/licenses/by/4.0/
//
// Unless required by applicable law or agreed to in writing, documentation
// distributed under the Documentation License is distributed on an "AS IS"
// BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
// implied. See the Documentation License for the specific language governing
// permissions and limitations under the Documentation License.
// ==================================================================================
//
//

package route

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "routing-manager/pkg/models"
)

// GetRoutesOKCode is the HTTP code returned for type GetRoutesOK
const GetRoutesOKCode int = 200

/*GetRoutesOK All the routes

swagger:response getRoutesOK
*/
type GetRoutesOK struct {

	/*
	  In: Body
	*/
	Payload models.Routes `json:"body,omitempty"`
}

// NewGetRoutesOK creates GetRoutesOK with default headers values
func NewGetRoutesOK() *GetRoutesOK {

	return &GetRoutesOK{}
}

// WithPayload adds the payload to the get routes o k response
func (o *GetRoutesOK) WithPayload(payload models.Routes) *GetRoutesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get routes o k response
func (o *GetRoutesOK) SetPayload(payload models.Routes) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRoutesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.Routes{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
