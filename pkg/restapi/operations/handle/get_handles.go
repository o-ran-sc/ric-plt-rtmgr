// Code generated by go-swagger; DO NOT EDIT.

// ==================================================================================
// Unless otherwise specified, all software contained herein is licensed
// under the Apache License, Version 2.0 (the "Software License");
// you may not use this software except in compliance with the Software
// License. You may obtain a copy of the Software License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the Software License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the Software License for the specific language governing permissions
// and limitations under the Software License.
//
// ==================================================================================
//
// Unless otherwise specified, all documentation contained herein is licensed
// under the Creative Commons License, Attribution 4.0 Intl. (the
// "Documentation License"); you may not use this documentation except in
// compliance with the Documentation License. You may obtain a copy of the
// Documentation License at
//
// https://creativecommons.org/licenses/by/4.0/
//
// Unless required by applicable law or agreed to in writing, documentation
// distributed under the Documentation License is distributed on an "AS IS"
// BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
// implied. See the Documentation License for the specific language governing
// permissions and limitations under the Documentation License.
// ==================================================================================
//
//

package handle

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetHandlesHandlerFunc turns a function with the right signature into a get handles handler
type GetHandlesHandlerFunc func(GetHandlesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetHandlesHandlerFunc) Handle(params GetHandlesParams) middleware.Responder {
	return fn(params)
}

// GetHandlesHandler interface for that can handle valid get handles params
type GetHandlesHandler interface {
	Handle(GetHandlesParams) middleware.Responder
}

// NewGetHandles creates a new http.Handler for the get handles operation
func NewGetHandles(ctx *middleware.Context, handler GetHandlesHandler) *GetHandles {
	return &GetHandles{Context: ctx, Handler: handler}
}

/*GetHandles swagger:route GET /handles handle getHandles

Placeholder for further usage

Placeholder for further usage.

*/
type GetHandles struct {
	Context *middleware.Context
	Handler GetHandlesHandler
}

func (o *GetHandles) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetHandlesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
