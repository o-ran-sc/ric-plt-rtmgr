// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewUndeployXappParams creates a new UndeployXappParams object
// with the default values initialized.
func NewUndeployXappParams() *UndeployXappParams {
	var ()
	return &UndeployXappParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUndeployXappParamsWithTimeout creates a new UndeployXappParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUndeployXappParamsWithTimeout(timeout time.Duration) *UndeployXappParams {
	var ()
	return &UndeployXappParams{

		timeout: timeout,
	}
}

// NewUndeployXappParamsWithContext creates a new UndeployXappParams object
// with the default values initialized, and the ability to set a context for a request
func NewUndeployXappParamsWithContext(ctx context.Context) *UndeployXappParams {
	var ()
	return &UndeployXappParams{

		Context: ctx,
	}
}

// NewUndeployXappParamsWithHTTPClient creates a new UndeployXappParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUndeployXappParamsWithHTTPClient(client *http.Client) *UndeployXappParams {
	var ()
	return &UndeployXappParams{
		HTTPClient: client,
	}
}

/*UndeployXappParams contains all the parameters to send to the API endpoint
for the undeploy xapp operation typically these are written to a http.Request
*/
type UndeployXappParams struct {

	/*XAppName
	  Xapp to be undeployed

	*/
	XAppName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the undeploy xapp params
func (o *UndeployXappParams) WithTimeout(timeout time.Duration) *UndeployXappParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the undeploy xapp params
func (o *UndeployXappParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the undeploy xapp params
func (o *UndeployXappParams) WithContext(ctx context.Context) *UndeployXappParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the undeploy xapp params
func (o *UndeployXappParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the undeploy xapp params
func (o *UndeployXappParams) WithHTTPClient(client *http.Client) *UndeployXappParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the undeploy xapp params
func (o *UndeployXappParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithXAppName adds the xAppName to the undeploy xapp params
func (o *UndeployXappParams) WithXAppName(xAppName string) *UndeployXappParams {
	o.SetXAppName(xAppName)
	return o
}

// SetXAppName adds the xAppName to the undeploy xapp params
func (o *UndeployXappParams) SetXAppName(xAppName string) {
	o.XAppName = xAppName
}

// WriteToRequest writes these params to a swagger request
func (o *UndeployXappParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param xAppName
	if err := r.SetPathParam("xAppName", o.XAppName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
