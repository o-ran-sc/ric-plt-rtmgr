// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	appmgr_model "routing-manager/pkg/appmgr_model"
)

// GetAllXappsReader is a Reader for the GetAllXapps structure.
type GetAllXappsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllXappsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAllXappsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewGetAllXappsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAllXappsOK creates a GetAllXappsOK with default headers values
func NewGetAllXappsOK() *GetAllXappsOK {
	return &GetAllXappsOK{}
}

/*GetAllXappsOK handles this case with default header values.

successful query of xApps
*/
type GetAllXappsOK struct {
	Payload appmgr_model.AllXapps
}

func (o *GetAllXappsOK) Error() string {
	return fmt.Sprintf("[GET /xapps][%d] getAllXappsOK  %+v", 200, o.Payload)
}

func (o *GetAllXappsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllXappsInternalServerError creates a GetAllXappsInternalServerError with default headers values
func NewGetAllXappsInternalServerError() *GetAllXappsInternalServerError {
	return &GetAllXappsInternalServerError{}
}

/*GetAllXappsInternalServerError handles this case with default header values.

Internal error
*/
type GetAllXappsInternalServerError struct {
}

func (o *GetAllXappsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /xapps][%d] getAllXappsInternalServerError ", 500)
}

func (o *GetAllXappsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
