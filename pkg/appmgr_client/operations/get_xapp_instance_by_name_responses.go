// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	appmgr_model "routing-manager/pkg/appmgr_model"
)

// GetXappInstanceByNameReader is a Reader for the GetXappInstanceByName structure.
type GetXappInstanceByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetXappInstanceByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetXappInstanceByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetXappInstanceByNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetXappInstanceByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetXappInstanceByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetXappInstanceByNameOK creates a GetXappInstanceByNameOK with default headers values
func NewGetXappInstanceByNameOK() *GetXappInstanceByNameOK {
	return &GetXappInstanceByNameOK{}
}

/*GetXappInstanceByNameOK handles this case with default header values.

successful operation
*/
type GetXappInstanceByNameOK struct {
	Payload *appmgr_model.XappInstance
}

func (o *GetXappInstanceByNameOK) Error() string {
	return fmt.Sprintf("[GET /xapps/{xAppName}/instances/{xAppInstanceName}][%d] getXappInstanceByNameOK  %+v", 200, o.Payload)
}

func (o *GetXappInstanceByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(appmgr_model.XappInstance)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetXappInstanceByNameBadRequest creates a GetXappInstanceByNameBadRequest with default headers values
func NewGetXappInstanceByNameBadRequest() *GetXappInstanceByNameBadRequest {
	return &GetXappInstanceByNameBadRequest{}
}

/*GetXappInstanceByNameBadRequest handles this case with default header values.

Invalid name supplied
*/
type GetXappInstanceByNameBadRequest struct {
}

func (o *GetXappInstanceByNameBadRequest) Error() string {
	return fmt.Sprintf("[GET /xapps/{xAppName}/instances/{xAppInstanceName}][%d] getXappInstanceByNameBadRequest ", 400)
}

func (o *GetXappInstanceByNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetXappInstanceByNameNotFound creates a GetXappInstanceByNameNotFound with default headers values
func NewGetXappInstanceByNameNotFound() *GetXappInstanceByNameNotFound {
	return &GetXappInstanceByNameNotFound{}
}

/*GetXappInstanceByNameNotFound handles this case with default header values.

Xapp not found
*/
type GetXappInstanceByNameNotFound struct {
}

func (o *GetXappInstanceByNameNotFound) Error() string {
	return fmt.Sprintf("[GET /xapps/{xAppName}/instances/{xAppInstanceName}][%d] getXappInstanceByNameNotFound ", 404)
}

func (o *GetXappInstanceByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetXappInstanceByNameInternalServerError creates a GetXappInstanceByNameInternalServerError with default headers values
func NewGetXappInstanceByNameInternalServerError() *GetXappInstanceByNameInternalServerError {
	return &GetXappInstanceByNameInternalServerError{}
}

/*GetXappInstanceByNameInternalServerError handles this case with default header values.

Internal error
*/
type GetXappInstanceByNameInternalServerError struct {
}

func (o *GetXappInstanceByNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /xapps/{xAppName}/instances/{xAppInstanceName}][%d] getXappInstanceByNameInternalServerError ", 500)
}

func (o *GetXappInstanceByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
